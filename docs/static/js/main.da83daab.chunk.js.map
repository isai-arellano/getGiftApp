{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GiftGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qLAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAc5C,OACI,sBAAMC,SARU,SAACC,GACrBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAQ,IACzBR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAId,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAhBe,SAACP,GAEzBF,EAAcE,EAAEQ,OAAOF,a,+BCTbG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,+DAEGI,MAAMF,GAFT,cAEdG,EAFc,gBAGCA,EAASC,OAHV,uBAGbC,EAHa,EAGbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAYbM,GAZa,4CAAH,sDCERO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAChC,OACI,sBAAKc,UAAU,oCAAf,UACE,qBAAKC,IAAOf,EAAMgB,IAAKN,IACvB,4BAAIA,QCADO,EAAW,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHZ,SAACA,GAAa,IAAD,EAEXd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAJyB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAiBrC,OAVAC,qBAAW,WACRxB,EAASC,GACRwB,MAAK,SAAAC,GACGH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAGtB,CAACpB,IAEIqB,EDZuBK,CAAa1B,GAA/Ba,EAFwB,EAE7BN,KAAYa,EAFiB,EAEjBA,QACf,OACA,qCACA,6BAAKpB,IACHoB,GAAW,mBAAGJ,UAAU,oBAAb,wBACb,qBAAKA,UAAU,YAAf,SACSH,EAAOJ,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAEKA,GADEA,EAAIC,aEXlBgB,EAAe,WAAO,IAAD,EACMzC,mBAAS,CAAC,KADhB,mBACvB0C,EADuB,KACX3C,EADW,KAE9B,OACI,qCACA,oBAAI+B,UAAU,oBAAd,0BACA,cAAC,EAAD,CAAa/B,cAAgBA,IAC7B,uBACD,6BAES2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAUA,GADHA,Y,MCX3B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.da83daab.chunk.js","sourcesContent":["\nimport React, { useState }from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({setCategories}) => {\nconst [inputValue, setInputValue] = useState('');\n\nconst handleInpuntChange = (e) =>{\n    \n   setInputValue(e.target.value)}\n\n   const handleSubmit = (e) =>{\n    e.preventDefault();\n    if(inputValue.trim().length >2){\n        setCategories( cats => [inputValue,...cats]);\n        setInputValue('')\n    }\n   }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n            type='text'\n            value={inputValue}\n            onChange= {handleInpuntChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired \n}\n","export const getGifts = async (category) =>{\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=8EqRefM4tthlTWLjQFUARIh9W6BgV6BF&limit=10`\n    const response = await fetch(url);\n    const {data} = await response.json();\n\n    const gifs = data.map( img =>{\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs\n}","import React from 'react'\n\nexport const GifGridItem = ( {title,url} ) => {\n    return (\n        <div className=\"animate__animated animate__bounce\">\n          <img src = {url } alt={title}/>\n          <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport {useFetchGifs} from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\n//import { getGifts } from '../helpers/getGif'\n\nexport const GiftGrid = ({category}) => {\n\n    const {data:images,loading} = useFetchGifs(category);\n        return (\n        <>\n        <h3>{category}</h3>     \n        { loading && <p className=\"animate__bounceIn\">Loading...</p>}   \n        <div className=\"card-grid\">   \n                {images.map(img =>(\n                    <GifGridItem \n                    key = {img.id}\n                    { ...img }/>\n                ))\n                }\n        </div>\n        </>\n    )\n}\n","import {useState,useEffect} from 'react'\nimport {getGifts} from '../helpers/getGif'\n\nexport const useFetchGifs = (category) =>{\n\n    const [state, setstate] = useState({\n        data:[],\n        loading:true\n    });\n\n    useEffect( () => {\n       getGifts(category)\n       .then(imgs =>{\n                setstate({\n                    data:imgs,\n                    loading:false\n                })\n       })\n    },[category])\n    \n    return state;\n}","\nimport React, { useState }from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GiftGrid } from './components/GiftGrid'\n\nexport const GifExpertApp = () => {\n    const [categories, setCategories] = useState([''])\n    return (\n        <>\n        <h2 className=\"animate__bounceIn\">Get Gift App</h2>\n        <AddCategory setCategories={ setCategories }/>\n        <hr />\n       <ol>\n           {\n                categories.map( category =>(\n                    <GiftGrid \n                    key = {category}\n                    category={category} />\n                )  \n               )\n\n           }\n       </ol>\n        </>\n    )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}